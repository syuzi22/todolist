{"version":3,"sources":["redux/constants.js","components/item/item.js","redux/actions.js","components/form/form.js","components/app/app.js","redux/middleware/generateId.js","redux/reducer.js","redux/store.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","EDIT_TODO","connect","dispatch","removeTodo","id","type","todoId","editTodo","text","payload","todoText","item","useState","editable","makeEditable","itemText","setItemText","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","defaultValue","onChange","event","target","value","autoFocus","required","Append","Button","variant","onClick","Text","style","userSelect","width","Form","props","state","handleChange","bind","handleSubmit","this","setState","addTodo","preventDefault","onSubmit","React","Component","generateId","todos","Object","entries","map","todo","store","next","action","rest","reduce","acc","key","uuid","reducer","newState","nextState","enhancer","applyMiddleware","createStore","composeWithDevTools","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5635ad38.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeTodo, editTodo } from '../../redux/actions.js';\nimport { useState } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst Item = ({item, id, removeTodo, editTodo}) => {\n    const [editable, makeEditable] = useState(false);\n    const [itemText, setItemText] = useState(item);\n    const applyClickHandler = () => {\n        makeEditable(false);\n        editTodo(id, itemText);\n    }\n\n    return (\n        <div>\n            <InputGroup className=\"mb-3\">\n                {\n                editable ?\n                <>\n                    <FormControl\n                        placeholder=\"Edit task\"\n                        aria-label=\"Edit task\"\n                        aria-describedby=\"Edit task\"\n                        type=\"text\"\n                        defaultValue={item}\n                        onChange={(event) => setItemText(event.target.value)} autoFocus\n                        required\n                    >\n                    </FormControl>\n                    <InputGroup.Append>\n                        <Button variant=\"outline-success\" onClick={applyClickHandler}>apply</Button>\n                    </InputGroup.Append>\n                </> :\n                <>\n                <InputGroup.Text style={{userSelect: 'none', width: '86%' }}>{item}</InputGroup.Text>\n                <InputGroup.Append>\n                        <Button variant=\"outline-secondary\" onClick={() => makeEditable(true)}>ðŸ–‰</Button>\n                </InputGroup.Append>\n                </>\n                }\n                <InputGroup.Append>\n                    <Button variant=\"outline-danger\" onClick={() => removeTodo(id)}>âœ—</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeTodo: id => dispatch(removeTodo(id)),\n        editTodo: (id, text) => dispatch(editTodo(id, text)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Item);","import { ADD_TODO, REMOVE_TODO, EDIT_TODO } from './constants';\n\nexport const addTodo = (todoText) => ({\n    type: ADD_TODO,\n    payload: {todoText},\n    generateId: ['todoId']\n});\n\nexport const removeTodo = (todoId) => ({\n    type: REMOVE_TODO,\n    todoId: todoId\n});\n\nexport const editTodo = (todoId, todoText) => ({\n    type: EDIT_TODO,\n    todoId: todoId,\n    payload: {todoText}\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../redux/actions.js'\n\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.addTodo(this.state.value);\n        this.setState({value: ''});\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Add task\"\n                            aria-label=\"Add task\"\n                            aria-describedby=\"Add task\"\n                            type=\"text\"\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            required\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"primary\" type=\"submit\">Add</Button>\n                        </InputGroup.Append>\n                </InputGroup>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addTodo: (value) => dispatch(addTodo(value))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Form);","import Item from '../item';\nimport Form from '../form';\nimport { connect } from 'react-redux';\n\nfunction App({todos}) {\n  return (\n    <>\n      <h1>TODO List</h1>\n      <Form />\n      <div>\n        {todos.map(todo => <Item key={todo[0]} id={todo[0]} item={todo[1]} />)}\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return ({\n    todos: Object.entries(state)\n  });\n}\n\nexport default connect(mapStateToProps)(App);\n","import { v4 as uuid } from 'uuid';\n\nconst generateId = (store) => (next) => (action) => {\n  if (!action.generateId) return next(action);\n\n  const { generateId, ...rest } = action;\n  next({\n    ...rest,\n    ...generateId.reduce((acc, key) => ({ ...acc, [key]: uuid() }), {}),\n  });\n};\n\nexport default generateId;\n","import { ADD_TODO, REMOVE_TODO, EDIT_TODO } from './constants';\n\n// {[todoId]: todoText}\nconst reducer = (state = {}, action) => {\n    const { type, todoId, payload } = action;\n    switch (type) {\n        case ADD_TODO:\n          return {...state, [todoId]: payload.todoText}\n        case REMOVE_TODO:\n          const newState = {...state};\n          delete newState[todoId]\n          return newState;\n        case EDIT_TODO:\n          const nextState = {...state};\n          nextState[todoId] = payload.todoText;\n          return nextState;\n        default:\n          return state;\n    }\n};\n\nexport default reducer;","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport generateId from './middleware/generateId';\nimport reducer from './reducer';\n\nconst enhancer = applyMiddleware(generateId);\n\nexport default createStore(reducer, composeWithDevTools(enhancer));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// DEV ONLY!!!\nwindow.store = store;\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}